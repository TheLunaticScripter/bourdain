query resources {
  resources {
  	...createResource
  }
}

query checks {
  checks {
    id
    command
  }
}

mutation createCramfs {
  createResource(data: {
		identifier: "cramfs",
    attributes: {
      create: {
        key: "disabled"
        value: "true"
        check: {
          create: {
            command: "modprobe -n -v cramfs | grep '/install/bin'"
          }
        }
        repair:{
          create: {
            command: "echo \"/install/bin cramfs true\" > /etc/modprobd/CIS.conf"
          }
        }
      }
    }
  }) {
    id
  }
}

mutation installBash {
  createResource(data: {
    identifier: "bash",
    attributes: {
      create: {
        key: "installed"
        value: "true"
        check: {
          create: {
            command: "rpm -qa bash"
          }
        },
        repair: {
          create: {
            command: "rpm -Uvh bash"
          }
        }
      }
    }
  }) {
    ...createResource
  }
}

fragment createResource on Resource {
  id
  identifier
  attributes {
    key
    value
    check {
      command
      state {
        stdout
        stderr
        exit
      }
    }
    repair {
      command
      state {
        stdout
        stderr
        exit
      }
    }
  }
}

# This is a new policy example starting from the ground up using STIG and CIS
query	policies {
  policies {
    title
    controls {
      resources {
				attributes {
          check {
            command
          }
        }
      }
    }
  }
}

mutation CISCentos7level1Server {
  createPolicy(data:{
    title: "CIS Centos 7 Level 1 Server"
    desc: "some thing"
    controls: {
      create:{
        title: "Cramfs should be disabled"
        impact: 1
        resources: {
          connect: {
            id: "ckcqissb90ev709048tyshq1f"
          }
        }
      }
    }
  }) {
    title
    controls {
      title
      resources {
        attributes {
          check {
            command
          }
        }
      }
    }
  }
}